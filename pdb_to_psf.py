#!/usr/bin/env python
import sys

class AtomRecord:
    '''Represents a single atom.'''    
    def __init__(self, line):
        self.atomid = int(line[6:11])
        self.atomname = line[12:16].strip()
        self.resname = line[17:20].strip()
        self.chain = line[21]
        if self.chain == " ":
             self.chain = "X"
        # Solvent residue ids are frequently mangled
        # so just set the mangled ones to 0
        try:
            self.resid = int(line[22:26])
        except:
            self.resid = 0
        self.x = float(line[30:38])
        self.y = float(line[38:46])
        self.z = float(line[46:54])
        self.occupancy = float(line[54:60])
        self.tempfactor = float(line[60:66])

class Molecule:

    solvent_residues = ["WAT", "T3P", "HOH"]

    def __init__(self, filename):
        self.atoms = []
        self.load_from_pdb(filename)
        
    def load_from_pdb(self, filename):
        pdb = open(filename)
        for line in pdb:
            if line[0:6] == "ATOM  ":
                atom = AtomRecord(line)
                self.atoms.append(atom)
        print >>sys.stderr, "Read %d atoms from %s." % (len(self.atoms), filename)
        
    def nuke_solvent(self):
        print >>sys.stderr, "Stripping solvent residues."
        self.atoms = [atom for atom in self.atoms if atom.resname not in self.solvent_residues]

    def keep_only_atomname(self, atomname):
        '''Keeps only a certain type of atom. (e.g. CA, CB, N, ...)'''
        print >>sys.stderr, "Keeping only %s atoms." % atomname
        self.atoms = [atom for atom in self.atoms if atom.atomname == atomname]
        
    def print_as_psf(self):
        print "PSF CMAP"
        print "       2 !NTITLE"
        print " REMARKS Generated by pdb_to_psf.py, by Tom Joseph <thomas.joseph@mssm.edu>"
        print " REMARKS No connectivity information included so don't try MD with this\n"
        print "%8d !NATOM" % len(self.atoms)
        
        for atom in self.atoms:
            print "%8d %-4s %4d %-4s %-4s %-4s %12.6f %10.4f" % \
                (atom.atomid, atom.chain, atom.resid, atom.resname, atom.atomname, \
                atom.atomname, 0.0, 1.0)
        
        print "\n%8d !NBOND\n" % 0
        print "%8d !NTHETA\n" % 0
        print "%8d !NPHI\n" % 0
        print "%8d !NIMPHI\n" % 0
        print "%8d !NCRTERM\n" % 0
        
if __name__ == "__main__":
    m = Molecule(sys.argv[1])
    m.nuke_solvent()
    if len(sys.argv) > 2:
	m.keep_only_atomname(sys.argv[2])
    m.print_as_psf()
